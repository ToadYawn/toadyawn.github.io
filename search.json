[{"title":"添加新模块流程","url":"/2020/01/20/添加新模块流程/","content":"\n## web.xml filter struts2 过滤器  \n\n/WebContent/web.xml\n\n## structs-sample.xml 调用 action\n\n/src/structs-sample.xml  \n\n```xml\n<action name=\"deleteSample\" class=\"unit.tca.action.sample.DeleteSampleAction\">\n    <result name=\"success\" type=\"json\">\n        <params name=\"root\">success</params>\n    </result> \n</action>\n```\n\n## add java sourcecode\n\n/src/unit.tca.action.sample/DeleteLoadSampleAction.java  \n\n```java\npackage unit.tca.sample;\n\nimport java.io.Serialiable;\n\npublic class DeleteLoadSampleAction extends BaseAction{\n    private int id;\n    private boolean success;\n    public String execute(){\n        Session session = HibernateSessionFactory.getSession();\n        Transaction transaction = session.begingTransaction();\n        try{\n            try{\n                Sample sample=(Sample)session.get(Sample.class,Interger,valueOf(this.id));\n                session.delete((Object)sample);\n                transaction.commit();\n                this.success=true;\n            } catch (Exception e){\n                transaction.rollback();\n                e.printDtackTrace();\n                this.success=false;\n                HibernateSessionFactory.closeSession();\n            }\n        } finally {\n            HibernateSessionFactory.closeSession();\n        }\n        return \"success\";//接受字符串给jsp页面\n    }\n\n    public int getId(){\n        return id;\n    }\n    \n\n}\n```"},{"title":"java_web:xml","url":"/2020/01/20/java-web-xml/","content":"\n## xml 语法\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<>\n\n```\n\n\n## xml 解析方式\n\n1. dom 解析\n2. sax 解析\n\n对应常用解析器有: jaxp, dom4j(实际使用最多), jdom\n\n## 使用 jaxp api\n\njaxp 是 javase 的一部分 import javax.xml.parsers  \nDocumentBuilder  \n    new: DocumnentBuilderFactory.newDocumentBuilder()  \n    parse: Document parse(String url) Document 是 org.w3c.dom下的接口  \n    取标签: Nodelist getElementByTag(String tagName) 遍历: i<list.getLength() list.iten(i)  \n    创建标签: createElement(String tagName)  \n    创建文本: creatTextNode(String data)  \n    文本添加到节点: appendChild(Node newChild) 或者删除 removeChild  \n    父节点: getParentNode()  \nDoucumentBuilderFactory  \n    new: newInstance()\n\n实现需求：查找name, 添加 node/删除/修改/遍历输出node名 \n1. 创建解析器工厂\n\n   ```java\n   DocumentBuildFactory builderFactory = DocumentBilderFactory.newInstance();\n   ```\n\n2. 通过工厂创建解析器\n   \n   ```java\n   DocumentBuilder builder = builderFactory.newDocumentBuilder();\n   ```\n\n3. 解析 xml 返回 document, 一定要回写，不然还在内存\n   \n   ```java\n   Docunment doc = builder.parse(\"src/person.xml\");\n   NodeList list = doc.getElementByTagName(\"name\");\n   for(int i=0;i<list.getLength();i++){\n       Node name = list.iten(i);\n       String s = name.getTextContent();//得到节点文本值 如果要修改，则是 setTextContent\n       System.out.println(s);\n   }\n   //添加\n   {\n   Element sex1 =document.createElement(\"sex\");\n   Text text = document.createTextNode(\"nv\");\n   sex1.appendChild(text);\n   p1.appendChild(sex1);\n   }\n   //递归遍历每一个节点\n   {\n       private static void list1(Node node){\n           if(node.getNodeType() == Node.ELEMENT_NODE){//避免空格换行都打印出来\n               Systom.out.println(node.getNodeName());\n           }\n           NodeList list = node.getChildNodes();\n           for(int i=0;i<node.getLength();i++){\n               Node node1 = node.items(i);\n               list1(node1);\n           }\n\n       }\n    }\n   //回写 xml\n   TransformerFactory tf = TransformerFactory.newInstance();\n   Transformer t = tf.newTransformer();\n   t.transform(new DOMSource(document),new StreamResult(\"src/person.xml\"))//transform(Source Node整个document父节点DocumentSource, Result StreamResult)\n   ``` "},{"title":"在Ubuntu上导入JavaWeb项目并配置","url":"/2020/01/19/在Ubuntu上导入JavaWeb项目并配置/","content":"\n## 准备ubuntu基本环境  \n\n1. 安装 JDK 任意版本  \n    一般安装在 /opt/java/ 解压  \n\n    ```bash\n    tar zvxf jdkxxxx /opt/java\n    ```\n\n    配置环境变量 /etc/profile  \n\n    ```bash\n    export JAVA_HOME=/opt/java/jdk1.8.0_181\n    export PATH=${JAVA_HOME}/bin:${PATH}\n    ```\n\n    使之生效\n\n    ```bash\n    source /etc/profile\n    ```\n\n    检查之  \n\n    ```bash\n    echo $JAVA_HOME\n    ```\n\n2. 安装 eclipse 任意版本  \n    一般安装在 /opt/eclipse/ 解压  \n\n    ```bash\n    tar zvxf eclipse-jeexxxx /opt/eclipse\n    ```\n\n    建立软连接，使 jre 成为其子目录  \n\n    ```bash\n    mkdir /opt/eclipse/jre\n    ln -s /opt/jvm/jdk1.8.0_181/bin /opt/eclipse/jre/\n    ```\n\n    添加 eclipse 桌面图标\n\n    ```bash\n    sudo gedit /usr/share/applications/eclipse.desktop\n    #打开文件后添加\n    [Desktop Entry]\n    Encoding=UTF-8\n    Name=Eclipse\n    Comment=Eclipse\n    Exec=/opt/eclipse/eclipse  #注意查看这两项实际地址与名称\n    Icon=/opt/eclipse/icon.xpm  #\n    Terminal=false\n    StartupNotify=true\n    Type=Application\n    Categories=Application;Development;\n    //赋予权限\n    sudo chmod u+x /usr/share/applications/eclipse.desktop\n    ```\n\n## 准备项目包  \n\n```bash\n#登录\nftp:192.168.1.185/Install/web/kingkong_web_ubuntu1404.tgz\nusername:tcauser\nuserpwd:tcasoft.com\n#解压到 /opt/\ntar zxvf kingkong_web_ubuntu1404.tgz /opt/\n#最后得到 /opt/kingkong_web/ 目录\n```\n\n## 配置eclipse环境\n\n1. 设置好工作空间  \n  一般也在 /opt/eclipse_workspace  \n2. 指定项目内的 jre 为新项目的 build path  \n  在 preference>Java>Installed JREs 中 add 路径为 /opt/kingkong_web/local/jdk1.7.xxxx\n3. 导入项目包  \n  import existing project into workspace  \n  选择目录为 /opt/kingkong_web/ 后 finish 导入  \n4. 设置项目内 tomcat 作为应用服务器  \n  打开 server view(windows>show views>server)  \n  新建 server, 选 tomcat 7.0 以及 /opt/kingkong_web/apache-tomcar-7.0.37, 将 KKWeb add 配置到上面 finish  \n\n## 配置环境变量以及启动 mysql/redis\n\n1. 获取当前 user\n\n    ```bash\n    PROJ_USER=`whoami`\n    ```\n\n2. 获取 shell 文件所在 bin 父文件夹的绝对路径（即项目文件夹）  \n  \n    ```bash\n    # 获取当前执行 shell 文件所在路径及文件名\n    BASH_SOURCE  \n    BASH_SOURCE[0] # 输出为 /opt/kingkong_web/bin/noash_control\n    # 去除文件名，仅保留与目录有关部分\n    dirname\n    dirname \"$BASH_SOURCE[0]\" # 输出为 /opt/kingkong_web/bin\n    # 获取绝对路径名称\n    pwd\n    # 合\n    PROJ_DIR=`cd \"$(dirname $BASH_SOURCE[0])/..\"; pwd`\n    # 或者\n    PROJ_DIR=`cd \"`dirname $BASH_SOURCE[0]`/..\"; pwd`\n    ```\n\n3. 修改 PATH 可执行程序的查找路径  \n  \n    ```shell\n    #单次修改，关闭终端即无效\n    export PATH=\"/opt/kingkong_web/local/jdk1.7.0_80/bin:$PATH\" # 冒号是分隔符，表示在原有基础上添加\n    #稳定修改 ~/.bashrc 或者 ~/.bash_profile 或者系统级别的 /etc/profile 在其中添加\n    vi ~/.bashrc\n    source .bashrc\n\n    # 可执行文件添加 javahome/jrehome/classpath/javapath/pythonpath\n\n    export JAVA_HOME=\"$PROJ_DIR/local/jdk1.7.0_80\"\n    export PATH=\"$JAVA_HOME/bin:$PATH\"\n    export JRE_HOME=\"$PROJ_DIR/local/jdk1.7.0_80/jre\"\n    export CLASSPATH=\".:$JAVA_HOME/lib:$JRE_HOME/lib\" # 当前目录；jdklib；jrelib\n    export PYTHONPTH=\"$PROJ_DIR/local/lib/python2.7\"\n    ```\n\n    + 修改 LD_LIBRARY_PATH 动态库的查找路径  \n\n    ```bash\n    # 同样有命令单次和写文件两种\n\n    # 可执行文件添加 LD_LIBRARY/LIBRARY/C_INCLUDE/CPLUS_INCLUDE\n    export LD_LIBRARY_PATH=\"$PROJ_DIR/local/lib:$LD_LIBRARY_PATH\"\n    export LIBRARY_PATH=\"$PROJ_DIR/local/lib:$LIBRARY_PATH\"\n    export C_INCLUDE_PATH=\"$PROJ_DIR/local/include:$C_INCLUDE_PATH\"\n    export CPLUS_INCLUDE_PATH=\"$PROJ_DIR/local/include:$CPLUS_INCLUDE_PATH\"\n    LOG_FILE=\"$PROJ_DIR/log/apt.log\"\n    ```\n\n4. 根据start/stop/status运行响应配置程序\n\n    ```bash\n    case \"$1\" in # input argument[1]\n    start)\n        # 一般会重定向 1>/dev/null 2>&1\n        echo \"starting sandox-web cluster node ...\" >&2 # >&2 重定向到标准错误\n        start\n        echo \"started\" >&2\n        RETVAL=$? # 返回值为上一个函数\n    ;;\n\n    stop)\n        echo \"stop sandox-web cluster node ..\" >&2\n        stop\n        echo \"stoped\" >&2\n        RETVAL=$?\n    ;;\n\n    status)\n        status\n        RETVAL=$?\n    ;;\n\n    *)\n        echo \"Usage: bin/noah_control start/stop/status\" >&2\n        exit 1\n    ;;\n    esac\n\n    start() {\n        echo $PROJ_DIR\n        echo $PROJ_USER\n        #config mysql\n        cp $PROJ_DIR/mysql/my.cnf.apt $PROJ_DIR/mysql/my.cnf\n        sed -i \"s#apt_mysql_path#$PROJ_DIR#g\" $PROJ_DIR/mysql/my.cnf\n        ## 修改 opt/kingkong_web/mysql/my.cnf 中 apt_mysql_path 为 opt/kingkong_web\n        sed -i \"s#apt_mysql_user#$PROJ_USER#g\" $PROJ_DIR/mysql/my.cnf\n        ## 修改 opt/kingkong_web/mysql/my.cnf 中 apt_mysql_user 为 kk\n        #start mysql\n        cd $PROJ_DIR/mysql\n        nohup ./scripts/mysql_install_db --user=$PROJ_USER > $LOG_FILE &\n        ## nohup 表示 no hang up, 不被挂断，关闭 shell 仍能运行；& 表示后台运行，可以持续接受输入\n        ## 持续后台运行 mysql_install_db 参数为 --user=$PROJ_USER 输出重定向至 LOG 文件\n        nohup ./bin/mysqld_safe --defaults-file=$PROJ_DIR/mysql/my.cnf  &\n        #start redis\n        cd  $PROJ_DIR/redis\n        nohup ./redis-server redis.conf\n        cd $PROJ_DIR\n        #start tomcat\n        #nohup $PROJ_DIR/apache-tomcat-7.0.37/bin/startup.sh > $LOG_FILE &\n        sleep 3\n    }\n    # stop 和 status省略\n    ```\n\n## 在 eclipse 中启动 tomcat 即可/或者直接 start 中就可以\n\n登录 localhost:4000  \n用户名：root  \n密码：root007\n"},{"title":"Build and Maintain Hexo","url":"/2020/01/18/Build-and-Maintain-Hexo/","content":"> Editor notes: this tutorial is following official document in hexo  \n\n## installation  \n\ndependance:  \n\n+ Git  \n  \n  download from [Git Official](https://git-scm.com/)  \n\n    ```c\n    git config --global user.name \"Your Name\"\n    git config --global user.email \"email@example.com\" //configure your git repository  \n    ```\n\n+ Node.js  \n  \n  1. download packeage from [Nodejs Official Website](https://www.nodejs.org), follow install wizard  \n  2. check validation by cli:  \n\n    ```c\n    node -v //check version\n    npm -v //node package manager version\n    npm install -g cnpm --registry //globally registry to taobao mirror\n    cnpm -v //check cnpm version\n    ```\n\n+ Hexo  \n  \n  ```c\n  cnpm install -g hexo-cli\n  hexo -v //check validation\n  ```\n\n## initialization  \n\ninstall hexo-deployer-git:\n\n```shell\ncnpm install hexo-deployer-git --save\n\n```\n\n\nchange to desired directory(mkdir&cd)  \n\n```shell\nhexo init [folder]\nhexo s //start localhost:4000\nhexo n \"title\" //new a essay \nhexo g //generate\nhexo s //local check\n```\n\n## link to github  \n\n1. create a new repository named \"username.github.io\".  \n2. add text in _config.yml:\n\n    ```c\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n    type: git\n    repo: https://github.com/ToadYawn/toadyawn.github.io.git\n    branch: master\n    ```\n\n3. hexo command\n\n    ```c\n    hexo d //deploy to github\n    ```\n\n    input your github usermail and password\n\n\n## customize themes  \n\npreview themes in [ThemeWeb](https://hexo.io/themes)  \nclick picture to preview  \nclick link to github repository  \nclone to your local theme folder:  \n\n```c\ngit clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo\n```\n\nmodify your _config.yml:\n\n```c\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: hipaper//chang here\n```\n\n```markdown\nFULL DOC:\n\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: ToadYawn\nsubtitle: 汤圆\nauthor: Tingyu Hu\nlanguage: zh\ntimezone:\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://toadyawn.github.io\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n#Custom Setting Start\n\n# Site settings\n# 网站综合内容设置：\nSEOTitle: ToadYawn的博客 | ToadYawn's Blog\nemail: geisterwelt@163.com\ndescription: \nkeyword: \n\n# SNS settings\n# 一些社交平台地址，支持以下几种：\n# weibo_username:     \n# zhihu_username:     \ngithub_username: ToadYawn  \n# twitter_username:  \n# facebook_username:  \nlinkedin_username: tingyu-hu\n\n# Build settings\nanchorjs: true                          # if you want to customize anchor. check out line:181 of `post.html`\n\nsidebar-avatar: img/avatar.jpg \n    # use absolute URL, seeing it's used in both `/` and `/about/`\n\n# Friends\n# 友情链接\nfriends: [\n    {\n      title: \"It helps SEO\",\n      href: \"https://www.baidu.com\",\n    }\n]\n\n#comment:\n#  type: gitment\n#  id: your-id-created-by-https://github.com/settings/applications/new\n#  secret: your-secret-created-by-https://github.com/settings/applications/new\n#  owner: aircloud\n#  repo: hexo-aircloud-blog\n\n# comment:\n#    type: disqus\n#    script: 'https://airclouds-blog.disqus.com/embed.js'\n\n# donate:\n#   img: img/donate.jpg\n#   content: 感谢鼓励\n\n# The following content is not recommended to modify\n# 搜索数据文件路径设置，不建议改动：\nsearch:\n  path: search.json\n  field: post\n\n# 文章样式(是否首行缩进)：\npost_style:\n  indent: 0\n\n# Custom Setting End\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archive\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :year-:month-:day-:title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: true\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map: \n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 0\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: aircloud\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n#  type: git\n#  repo: your repo url\n#  branch: master\n  type: git\n  repo: https://github.com/ToadYawn/toadyawn.github.io.git\n  branch: master\n\n\n```\n"},{"title":"Hello World","url":"/2020/01/18/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"},{"title":"Tomcat install & deploy web application","url":"/2020/01/14/javalearning/","content":"## directory of installed Tomcat  \n\n+ <kbd>bin</kbd> store script file for startup or shutdown in different operation system  \n+ <kbd>conf</kbd> configuration of tomcat including server.xml\n+ <kbd>lib</kbd> jar package needed by tomcat  \n+ <kbd>logs</kbd> log  \n+ <kbd>temp</kbd> Directory used by the JVM for temporary files (java.io.tmpdir)\n+ <kbd>webapps</kbd> java application accessible by client  \n+ <kbd>work</kbd> servlet files trasnformed from jsp \n\n\n## idea integrate tomcat  \n\ncreate new web application project  \nadd configuration  \nserver>local>tomcat directory"},{"title":"DigestWorldHistory001","url":"/2020/01/12/history001/","content":"\n\n> 001人类历史的开端——石器时代的人们  \n\n## 人类的起源\n\n### 神创论或特创论：上帝造人\n\n基督教认为人类是上帝创造的。\n\n> And God said, Let us make man in our image, after our likeness: and let them have dominion over the fish of the sea, and over the fowl of the air, and over the cattle, and over all the earth, and over every creeping thing that creepeth upon the earth.  \n\n> 神就照着自己的形像造人，乃是照着他的形像造男造女\n\n圣经创世纪中上帝先用5天时间造昼夜、天地、植物、水生动物以及日月星辰，到了第六天用泥土造了一个叫亚当的男人，后来见亚当孤独又抽出他一根肋骨，变作一个叫夏娃的女子，与亚当结为美满夫妻。所以我们人类都是亚当和夏娃的子孙。\n\n之后引发一些有趣理论。厄谢尔，爱尔兰大主教，根据《圣经》的说法，推算出上帝造人的时间是公元前 4004 年。牛津大学圣约翰学院的神父，进一步把来当诞生的时间精确到小时，即公元前 4004 年 3 月 23 日上午 9 点整。\n\n### 自然发生说\n\n古希腊爱好智慧的哲学家，专注于仰观宇宙、俯察人生。  \n\n米利森学派的阿纳克西曼德断言，人是从海里的一种很像鱼的动物变化过来的，除开原始人的图腾崇拜，这是人类起源于动物界的最早说法。  \n神创论与自然发生说都是古人跟着感觉走而得出的假设，其中充满了孩童般的天真。 \n\n### 进化论\n\n18 世纪，现代生物学分类的鼻祖，瑞典植物学家**林奈**，在拟定动物分类系统时，将人和类人猿分到一起，通称为灵长类。  \n\n法国科学家**布丰**提出了人猿共祖的假设。由于处在基督教思想专政的末期，他的想法遭到《圣经》捍卫者们的围攻，在巴黎大学当众检讨才勉强过关，但他的思想影响了他的学生拉马克。  \n\n**拉马克**是进化论的伟大先驱，他于 1809 年发表《动物学哲学》一书，系统提出进化论的观点，这个理论的核心内容是**物种进化说**，认为一切生物都因自然的作用才得以产生，随着环境的变化而演化，开始简单、逐渐复杂。  \n\n英国生物学家**达尔文**（1809~1882） 1831 年底乘英国的贝格尔号参加了一次周游世界的考察，走了五年，到过美洲、澳大利亚，收集了很多的标本。1836 年 10 月回国以后用大约 20 年的时间，收集资料、潜心研究，于 1859 年发表了划时代的巨著《物种起源》。他指出：所有的动物和植物，都是自然界长期演化的产物，但没有涉及人类的进化问题。1871 年他出版了《人类的由来及其性选择》，第一次描述了人类进化地图景。  \n\n达尔文指出：\n\n> 在自然条件下，一切生物都要受周围环境的影响而发生变异，能够发生有利变异的物种就能生存和发展，不能发生有利变异的物种就必然被周围环境所淘汰。  \n\n这个基本原理在同时代清末被著名的启蒙思想家严复概括为八个字，叫作“物竞天择、适者生存”。  \n\n此时在西方，达尔文的理论提出的时候，遭到教会的猛烈反对，在社会上也引起广泛的争论。然而，随着科学的进步，在其晚年时，学术界已经不再怀疑进化论了。  \n\n### 人类祖先遗迹的发现  \n\n进化论确立之前，考古学家和古生物学家已经发现许多古人化石以及伴生的打制石器及其它工艺品。但在进化论确立之前，人们还想像不到在亚当夏娃出现之前会有人类存在，所以他们无法理解这些发现的含义。进化论确立之后，欧洲知识分子的目光越出了教会划定的界限，开始到世界各地寻找远古人类的痕迹，陆续成功的发现大量古人类的化石与他们使用的工具。\n\n地球上最早的人类化石：*能人 非洲坦桑尼亚 奥杜威峡谷*  \n发现者：*英国古人类学家利基夫妇利基*  \n\n在剑桥大学完成非洲史前史学业后，一心到东非去寻找古人类化石。在 20 世纪前半期，有关早期人类的大发现都集中在亚洲，比如印尼的爪哇人、中国的北京人，但是利基却执意要去非洲，利基夫妇在媾锲而不舍的工作了几十年，终于在 1961 年发现了最早的人类遗存，定年在 170 至 190 万年前。  \n\n>在能人之前还有更早的人类祖先南方古猿，南方古猿是在上个世纪七十年代以来陆续发现的一组变异很大的化石，存在的时间大概从五百多万年前到一百万年前。这些化石的发现具有很大的意义，因为在此以前，人们普遍认为，人类的两个基本的特征就是直立行走和制造工具，这两个特征是同时出现的。然而，南方古猿的发现推翻了这个结论。南方古猿普遍能够直立行走，但不会制造工具，有关这方面的最直接的证据就是利基夫人在 1976 年于坦桑尼亚奥杜威峡谷以南的一个叫作莱托利的平原上发现的两个南方古猿个体的脚印。莱托利平原上有一座火山，火山曾经喷发过，在它的周围形成了很厚的火山灰的沉积层。考古队员们有一次在打闹当中，用大象粪互相击打，有一个队员倒地后发现火山灰的凝结层当中有动物的脚印痕迹，考古队员们就顺着这个痕迹挖了下去，挖出了一条几十米长的脚印带。在脚印带当中，有两个南方古猿个体的脚印，一个是成年的、一个是小孩的，在它们脚印周围还有许多动物的脚印，所有这些脚印都显得从容不迫，看来它们已经对火山的喷发司空见惯了。  \n（北京师范大学历史学院教授郭小凌）  \n\n### 石器时代  \n\n从能人开始，世界历史进入了它的最初阶段-石器时代。\n\n石器是人类祖先生存斗争的基本武器，根据工具制作技术的不同，石器时代又分成旧石器时代和新石器时代两大阶段，两大阶段之间插着一个过渡阶段，人称中石器或细\n石器时代。  \n\n所谓旧石器是指打制的石器，石器时代当中以旧石器时代时间是从 180 万年前一直延续到约 15000 年前，由于时间久远，考古学家为了认识的方便起见，又把这个时期分成三个较短的时期：即旧石器时代早期、中期和晚期。  \n旧石器时代早期自 180 万年前至 20~30 万年前。这个时期的人类还带有猿的特征，所以被称为猿人。比如最早的能人脑量不只有 500 至 700 亳升，身高在 1.2 至 1.4 米、能直立行走。较晚期的猿人，如非洲的奥科托姆人欧洲的海德堡人、亚洲的北京人、蓝田人等，脑量虽然增大到 750 至 1059 毫升，身高增长到 1.6 米左右，但还是同现代人有显著的区别。尤其头骨构造仍具有猿的特征，吻部、眉脊突出、前额矮平、没有或只有很小的下颌。猿人的食物来源要靠采集和狩猎。他们采集和狩猎的工具主要是用砾石相互敲打成多面体、棱锥体、石片之类的敲砸器。他们用这些粗糙的工具刺杀、猎捕、切割性情比较温和的大中型动物，如长颈鹿、野马、大象、河马、羚羊等等。至于鸟类、鱼类、昆虫、鸟蛋、植物块根果实甚至昆虫就更是早期人类的果腹之物了。\n\n随着上百万年生存经验的积累，旧石器早期的人们逐渐能按照自己的预想去生产自己的产品，于是出现多用途的石器，像两面打击成型的手斧、砍砸器、刮削器、尖状器之类。  \n\n在100多万年前至50万年前这段时间里，世界一些地区的古人类相继掌握了人工控制天然火的技能。考古学家分别在肯尼亚的切期旺贾以及我国山西芮城西候度、北京周口店猿人遗址发现了人工用火的痕迹。  \n火的使用在世界史上具有划时代的意义，无论怎样估量都不过分。火被用来加工食物、取暖以及自我保护，烧制的食物不仅味道好、而且易于咀嚼和消化。高温加热的食物可以形成200多种新的化合物，促使人体内脏、大脑、骨骼、口腔的进化加快。  \n火还被用来驱赶野兽、加工木器，导致人类猎取动物的水平空前提高，披毛犀、野牛、剑齿象这些大型野兽也就成了原始人的猎物。更重要的是，有了火人类从此有再风餐露宿，迁入了可以遮风避雨的洞穴。这样在100万年前开始的四次大冰期当中，人类不仅在北半球的冰天雪地中生存下来，而且还迁徙到了旧大陆的大部分地区。  \n>至于他们的社会结构，公社的领袖通常是由公社的成员集体推选产生的，在氏族和部落阶段，公社还实行严格的外婚制，公社内部的成员必须到公社外部去寻找自己的配偶。  \n公社内实行严格的社会分工，比如说男人出去狩猎，女人在驻地照料孩子和采集各种野生植物。  \n（北京师范大学历史学院教授郭小凌）  \n\n北京猿人的颅骨内腔结构证实，人类的分节语能力产生于旧石器时代早期约50万年前左右，与人工用火的发明在同一时期。  \n\n时钟转到大约25万年前，也就是到了旧石器时代中期，人类开始从猿人阶段向我们现代人过渡。  \n>直立行走实际上不仅仅是解放了人的双手，而且它还引起了身体部位的某些相关的变化。  \n具体到发音器官上，随着人的直立行走和腭部的隆起，人的吻部会萎缩，口腔和喉会形成一个直角，这个直角是人类区别于其它动物的地方之一，非常有利于发出各种各样的声音。另外，从当时人类的情况来看，熟食的发明使得人类的咀嚼器官逐渐萎缩、牙床变小，口腔内发音器官的活动余地变得更大，这样非常有利于人类语言当中的共鸣和唇音的形成。  \n（北京师范大学历史学院教授郭小凌）  \n\n大约5万年前，人类进入了旧石器时代晚期。这时的人在体质形态方面已经同我们现代人没有什么差别，三大人种的形成过程也已完结。\n\n>现代人类学认为，人种或者叫作种族是具有遗传特征的人类群体，大体分成三类：第一类是蒙古利亚人种，也叫黄种人；第二类是高加索人种，也叫白种人；第三类是尼格罗人种，也叫黑种人。黄种人主要分布在亚洲，白种人主要分布在欧美，黑种人主要分布在撒哈拉沙漠以南的非洲。各人种之间体质形态的差别主要表现在四个方面：皮肤的颜色、眼睛的颜色、头发的颜色和体形。这些不同的特征是受不同的地理环境影响形成的比如说黑人大多数皮肤黝黑是因为这种黝黑的皮肤用于保护身体免受紫外线的伤害。大多数黑人的头发是卷曲的。是因为这种卷曲的发型可以提高身体的隔热性。再比如北部欧洲的白人大多数，鼻梁隆起、鼻腔狭长，是因为这种鼻型用于空气的加热。这些现象、特征进一步证明人类的体质是受到不同的地理环境的影响、逐渐地演变成的。但是这与智力品格方面的高低优劣没有什么关系。  \n（北京师范大学历史学院教授郭小凌）  \n\n到了旧石器时代的晚期，石器制作的技术又有了很大的发展，像当时出现的间接打击法、钻孔法和摩擦法等等。  \n随着人类生存能力不断提高，人类的活动空间明显扩大，人类在晚期智人时代跨过白令海峡、飘过太平洋岛屿、成群结队在美洲和大洋洲安家落户。所以，第一批发现新大陆的移民，与其说是近代欧洲人，不如说是旧石器时代的亚洲居民。  \n物质生活的改变伴随着精神生活的进步，在旧石器时代的尾声中，人类的语言随着人类分散到世界各地而分化成几千种语音、词汇和语法结构不同的分节语。  \n只要有人存在，就能找到各种原始宗教的痕迹，如图腾崇拜、安灵崇拜、祖先崇拜等，以及以洞穴壁画和雕刻为代表的丰富多彩的原始艺术。这些岩画描绘出表达他们喜怒哀乐的情调。这些早期人类的绘画是文字长期发展历史中的第一步，正是这种技艺把我们与地球上其他生物区别开来，并为我们提供一个保存历史的方法。它意味着那史无前例无比瑰丽的文明社会的曙光就要升起在地平线之上了。"}]